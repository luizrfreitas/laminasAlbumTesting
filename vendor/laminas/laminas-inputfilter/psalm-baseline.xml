<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.23.0@f1fe6ff483bf325c803df9f510d09a03fd796f88">
  <file src="src/ArrayInput.php">
    <DeprecatedInterface occurrences="1">
      <code>ArrayInput</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="6">
      <code>allowEmpty</code>
      <code>allowEmpty</code>
      <code>continueIfEmpty</code>
      <code>continueIfEmpty</code>
      <code>continueIfEmpty</code>
      <code>injectNotEmptyValidator</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($value)</code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue occurrences="2">
      <code>$this-&gt;prepareRequiredValidationFailureMessage()</code>
      <code>$this-&gt;prepareRequiredValidationFailureMessage()</code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument occurrences="2">
      <code>$this-&gt;getFallbackValue()</code>
      <code>$this-&gt;getFallbackValue()</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$result[$key]</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$value</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="src/BaseInputFilter.php">
    <DocblockTypeContradiction occurrences="1">
      <code>! is_string($name)</code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;inputs</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="1">
      <code>$messages</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>array&lt;string, array&lt;array-key, string&gt;&gt;</code>
    </InvalidReturnType>
    <MixedArgument occurrences="1">
      <code>$input</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$inputs</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="3">
      <code>$inputContext</code>
      <code>$unknownInputs[$key]</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion occurrences="1">
      <code>$inputs</code>
    </MixedPropertyTypeCoercion>
    <PossiblyInvalidArgument occurrences="1">
      <code>$input</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$this-&gt;inputs</code>
    </PossiblyNullArrayOffset>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $name</code>
    </RedundantCastGivenDocblockType>
    <TooManyArguments occurrences="2">
      <code>isValid</code>
      <code>isValid</code>
    </TooManyArguments>
  </file>
  <file src="src/CollectionInputFilter.php">
    <ImplementedParamTypeMismatch occurrences="1">
      <code>$name</code>
    </ImplementedParamTypeMismatch>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>array&lt;array-key, array&lt;string, array&lt;array-key, string&gt;&gt;&gt;</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="1">
      <code>$data</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="5">
      <code>$name</code>
      <code>$this-&gt;collectionMessages</code>
      <code>$this-&gt;collectionMessages</code>
      <code>$this-&gt;invalidInputs</code>
      <code>$this-&gt;validInputs</code>
    </InvalidPropertyAssignmentValue>
    <LessSpecificImplementedReturnType occurrences="1">
      <code>array&lt;array-key, array&gt;</code>
    </LessSpecificImplementedReturnType>
    <MixedArgument occurrences="2">
      <code>$data</code>
      <code>$data</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$data</code>
    </MixedAssignment>
  </file>
  <file src="src/Factory.php">
    <InvalidReturnStatement occurrences="1">
      <code>$inputFilter</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>InputFilterInterface</code>
    </InvalidReturnType>
    <MixedArgument occurrences="9">
      <code>$inputFilterSpecification['count']</code>
      <code>$inputFilterSpecification['input_filter']</code>
      <code>$inputFilterSpecification['required']</code>
      <code>$inputFilterSpecification['required_message']</code>
      <code>$key</code>
      <code>$name</code>
      <code>$priority</code>
      <code>$value</code>
      <code>$value['type']</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="2">
      <code>$inputSpecification</code>
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="3">
      <code>$filter['name']</code>
      <code>$filter['options']</code>
      <code>$filter['priority']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="5">
      <code>$key</code>
      <code>$name</code>
      <code>$options</code>
      <code>$priority</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>new $class()</code>
    </MixedMethodCall>
    <PossiblyInvalidArgument occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="2">
      <code>add</code>
      <code>add</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="src/FileInput.php">
    <DeprecatedInterface occurrences="1">
      <code>FileInput</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="2">
      <code>allowEmpty</code>
      <code>continueIfEmpty</code>
    </DeprecatedMethod>
    <DeprecatedProperty occurrences="1">
      <code>$this-&gt;notEmptyValidator</code>
    </DeprecatedProperty>
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;implementation === null</code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;prepareRequiredValidationFailureMessage()</code>
    </InvalidPropertyAssignmentValue>
    <MixedAssignment occurrences="1">
      <code>$rawValue</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$implementation</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/FileInput/HttpServerFileInputDecorator.php">
    <DeprecatedInterface occurrences="1">
      <code>HttpServerFileInputDecorator</code>
    </DeprecatedInterface>
    <MixedAssignment occurrences="5">
      <code>$fileData</code>
      <code>$newValue[]</code>
      <code>$rawValue</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <RedundantCondition occurrences="2">
      <code>is_array($rawValue)</code>
      <code>is_array($rawValue)</code>
    </RedundantCondition>
  </file>
  <file src="src/FileInput/PsrFileInputDecorator.php">
    <DeprecatedInterface occurrences="1">
      <code>PsrFileInputDecorator</code>
    </DeprecatedInterface>
    <MixedArgument occurrences="1">
      <code>$rawValue[0]</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$fileData</code>
      <code>$newValue[]</code>
      <code>$rawValue</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>UploadedFileInterface|UploadedFileInterface[]</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2">
      <code>$filter-&gt;filter($value)</code>
      <code>$value</code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion occurrences="1">
      <code>$newValue</code>
    </MixedReturnTypeCoercion>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$rawValue</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Input.php">
    <DeprecatedInterface occurrences="1">
      <code>Input</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="8">
      <code>allowEmpty</code>
      <code>allowEmpty</code>
      <code>allowEmpty</code>
      <code>continueIfEmpty</code>
      <code>continueIfEmpty</code>
      <code>injectNotEmptyValidator</code>
      <code>setAllowEmpty</code>
      <code>setContinueIfEmpty</code>
    </DeprecatedMethod>
    <DeprecatedProperty occurrences="7">
      <code>$this-&gt;allowEmpty</code>
      <code>$this-&gt;allowEmpty</code>
      <code>$this-&gt;continueIfEmpty</code>
      <code>$this-&gt;continueIfEmpty</code>
      <code>$this-&gt;notEmptyValidator</code>
      <code>$this-&gt;notEmptyValidator</code>
      <code>$this-&gt;notEmptyValidator</code>
    </DeprecatedProperty>
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($this-&gt;errorMessage)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>null|string</code>
    </ImplementedReturnTypeMismatch>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;prepareRequiredValidationFailureMessage()</code>
    </InvalidPropertyAssignmentValue>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <RedundantCastGivenDocblockType occurrences="4">
      <code>(bool) $allowEmpty</code>
      <code>(bool) $breakOnFailure</code>
      <code>(bool) $continueIfEmpty</code>
      <code>(string) $errorMessage</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/InputFilter.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$input</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/InputFilterAbstractServiceFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>InputFilterAbstractServiceFactory</code>
    </DeprecatedInterface>
    <MixedArgument occurrences="1">
      <code>$config</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$allConfig['input_filter_specs']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$allConfig</code>
      <code>$config</code>
    </MixedAssignment>
    <ParamNameMismatch occurrences="6">
      <code>$cName</code>
      <code>$container</code>
      <code>$container</code>
      <code>$rName</code>
      <code>$rName</code>
      <code>$services</code>
    </ParamNameMismatch>
  </file>
  <file src="src/InputFilterPluginManager.php">
    <MethodSignatureMismatch occurrences="1">
      <code>InputFilterPluginManager</code>
    </MethodSignatureMismatch>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$factories</code>
    </NonInvariantDocblockPropertyType>
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;initializers</code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/InputFilterPluginManagerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>InputFilterPluginManagerFactory</code>
    </DeprecatedInterface>
    <ParamNameMismatch occurrences="1">
      <code>$container</code>
    </ParamNameMismatch>
  </file>
  <file src="src/Module.php">
    <UndefinedDocblockClass occurrences="1">
      <code>ModuleManager</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/OptionalInputFilter.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>array&lt;string, mixed&gt;|null</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="test/ArrayInputTest.php">
    <ImplementedReturnTypeMismatch occurrences="3">
      <code>string[]</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="1">
      <code>$dataSets</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1"/>
    <MissingClosureParamType occurrences="3">
      <code>$set</code>
      <code>$set</code>
      <code>$set</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;input-&gt;getValue()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="5">
      <code>$set['raw']</code>
      <code>$set['raw']</code>
      <code>$set[1]</code>
      <code>$set[2]</code>
      <code>$set[4]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="5">
      <code>$set['raw']</code>
      <code>$set['raw']</code>
      <code>$set[1]</code>
      <code>$set[2]</code>
      <code>$set[4]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="4">
      <code>$value</code>
      <code>$values[0]</code>
      <code>$values[0]</code>
      <code>$values[1]</code>
    </MixedAssignment>
    <MixedReturnTypeCoercion occurrences="4">
      <code>$dataSets</code>
      <code>$dataSets</code>
    </MixedReturnTypeCoercion>
    <RedundantCondition occurrences="2">
      <code>isArray</code>
      <code>isArray</code>
    </RedundantCondition>
  </file>
  <file src="test/BaseInputFilterTest.php">
    <InvalidArgument occurrences="5">
      <code>$input</code>
      <code>$input</code>
      <code>['nested' =&gt; ['nested-input1', 'nested-input2']]</code>
      <code>new stdClass()</code>
      <code>new stdClass()</code>
    </InvalidArgument>
    <InvalidDocblock occurrences="1">
      <code>public function addMethodArgumentsProvider(): array</code>
    </InvalidDocblock>
    <LessSpecificReturnStatement occurrences="1"/>
    <MissingClosureParamType occurrences="7">
      <code>$context</code>
      <code>$context</code>
      <code>$data</code>
      <code>$data</code>
      <code>$inputTypeData</code>
      <code>$inputTypeData</code>
      <code>$set</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="3">
      <code>function ($data) {</code>
      <code>function ($inputTypeData) {</code>
      <code>function ($inputTypeData) {</code>
    </MissingClosureReturnType>
    <MixedArgument occurrences="6">
      <code>$data</code>
      <code>$dataTypes['Traversable']($data)</code>
      <code>$input</code>
      <code>$input</code>
      <code>$set[5]</code>
      <code>$set[6]</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="6">
      <code>$inputName</code>
      <code>$inputName</code>
      <code>$inputName</code>
      <code>$msg</code>
      <code>$msg</code>
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="12">
      <code>$filter1-&gt;getValues()['nested']['nestedField1']</code>
      <code>$filter1-&gt;getValues()['nested']['nestedField1']</code>
      <code>$filter1-&gt;getValues()['nested']['nestedField1']</code>
      <code>$inputTypeData[1]</code>
      <code>$inputTypeData[2]</code>
      <code>$set[0]</code>
      <code>$set[0]</code>
      <code>$set[2]</code>
      <code>$set[5]</code>
      <code>$set[5]</code>
      <code>$set[6]</code>
      <code>$set[6]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="3">
      <code>$set[0]</code>
      <code>$set[5]</code>
      <code>$set[6]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="3">
      <code>$set[0][$name]</code>
      <code>$set[5][$name]</code>
      <code>$set[6][$name]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="12">
      <code>$createMock</code>
      <code>$expectedRawValue</code>
      <code>$expectedValue</code>
      <code>$input</code>
      <code>$input</code>
      <code>$input</code>
      <code>$name</code>
      <code>$set[0][$name]</code>
      <code>$set[5][$name]</code>
      <code>$set[6][$name]</code>
      <code>$tmpTemplate[2]</code>
      <code>$tmpTemplate[3]</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="1">
      <code>$createMock($set[2])</code>
    </MixedFunctionCall>
    <MixedInferredReturnType occurrences="1"/>
    <MixedReturnTypeCoercion occurrences="2">
      <code>$dataSets</code>
    </MixedReturnTypeCoercion>
    <MoreSpecificReturnType occurrences="1">
      <code>array&lt;string, array{0: InputInterface, 1: null|string, 2: MockObject&amp;InputInterface}&gt;</code>
    </MoreSpecificReturnType>
    <NullArgument occurrences="1">
      <code>null</code>
    </NullArgument>
    <PossiblyNullArgument occurrences="2">
      <code>$expectedInputName</code>
      <code>$expectedInputName</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedMethod occurrences="3">
      <code>getName</code>
      <code>getName</code>
      <code>isRequired</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/CollectionInputFilterTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$expectedType</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="2">
      <code>new stdClass()</code>
      <code>testDataVsValid</code>
    </InvalidArgument>
    <InvalidReturnStatement occurrences="2"/>
    <InvalidReturnType occurrences="2">
      <code>array&lt;string, array{0: null|int, 1: bool}&gt;</code>
    </InvalidReturnType>
    <MissingClosureParamType occurrences="1">
      <code>$set</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="3">
      <code>function () use ($dataRaw, $dataFiltered) {</code>
      <code>function () use ($dataRaw, $dataFiltered) {</code>
      <code>function () use ($dataRaw, $dataFiltered, $errorMessage) {</code>
    </MissingClosureReturnType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$inputFilter</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="1">
      <code>$set[3]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$set[3]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="2">
      <code>$inputFilter</code>
      <code>$set[3]</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="1">
      <code>$set[3]()</code>
    </MixedFunctionCall>
    <MixedMethodCall occurrences="11">
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <MixedReturnTypeCoercion occurrences="2">
      <code>$dataSets</code>
    </MixedReturnTypeCoercion>
    <PossiblyInvalidArgument occurrences="2">
      <code>$baseInputFilter</code>
      <code>$baseInputFilter</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="7">
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/FactoryTest.php">
    <DeprecatedMethod occurrences="7">
      <code>allowEmpty</code>
      <code>allowEmpty</code>
      <code>allowEmpty</code>
      <code>allowEmpty</code>
      <code>continueIfEmpty</code>
      <code>setMethods</code>
      <code>setMethods</code>
    </DeprecatedMethod>
    <InvalidArgument occurrences="3">
      <code>'invalid_value'</code>
      <code>'invalid_value'</code>
    </InvalidArgument>
    <MixedAssignment occurrences="2">
      <code>$defaultFilterChain</code>
      <code>$defaultValidatorChain</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="9">
      <code>count</code>
      <code>count</code>
      <code>getFilters</code>
      <code>getPluginManager</code>
      <code>getPluginManager</code>
      <code>method</code>
      <code>method</code>
      <code>will</code>
      <code>will</code>
    </MixedMethodCall>
    <PossiblyInvalidArgument occurrences="2">
      <code>$provider</code>
      <code>$provider</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference occurrences="2">
      <code>getPluginManager</code>
      <code>getPluginManager</code>
    </PossiblyNullReference>
    <PossiblyUndefinedMethod occurrences="13">
      <code>breakOnFailure</code>
      <code>breakOnFailure</code>
      <code>expects</code>
      <code>expects</code>
      <code>getErrorMessage</code>
      <code>getErrorMessage</code>
      <code>getFilterChain</code>
      <code>getFilterChain</code>
      <code>getName</code>
      <code>getName</code>
      <code>getValidatorChain</code>
      <code>isRequired</code>
      <code>setValue</code>
    </PossiblyUndefinedMethod>
    <RawObjectIteration occurrences="1">
      <code>$chain</code>
    </RawObjectIteration>
    <UndefinedInterfaceMethod occurrences="1">
      <code>continueIfEmpty</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/FileInput/HttpServerFileInputDecoratorTest.php">
    <DeprecatedMethod occurrences="1">
      <code>setMethods</code>
    </DeprecatedMethod>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>array&lt;string, string&gt;</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="2">
      <code>''</code>
      <code>''</code>
    </InvalidArgument>
    <InvalidReturnStatement occurrences="1">
      <code>$dataSets</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>iterable</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement occurrences="1"/>
    <MoreSpecificReturnType occurrences="1">
      <code>array</code>
    </MoreSpecificReturnType>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$input</code>
    </NonInvariantDocblockPropertyType>
    <PropertyTypeCoercion occurrences="1">
      <code>new FileInput('foo')</code>
    </PropertyTypeCoercion>
  </file>
  <file src="test/FileInput/PsrFileInputDecoratorTest.php">
    <ImplementedReturnTypeMismatch occurrences="4">
      <code>UploadedFileInterface</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnType occurrences="1"/>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>[$upload, 'reveal']</code>
    </MixedArgumentTypeCoercion>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$input</code>
    </NonInvariantDocblockPropertyType>
    <PropertyTypeCoercion occurrences="1">
      <code>new FileInput('foo')</code>
    </PropertyTypeCoercion>
    <TypeDoesNotContainType occurrences="1">
      <code>$generator instanceof Generator</code>
    </TypeDoesNotContainType>
  </file>
  <file src="test/InputFilterAbstractServiceFactoryTest.php">
    <MissingClosureReturnType occurrences="1">
      <code>function () {</code>
    </MissingClosureReturnType>
    <MixedArgument occurrences="4">
      <code>$filterChain</code>
      <code>$filterChain</code>
      <code>$validatorChain</code>
      <code>$validatorChain</code>
    </MixedArgument>
    <MixedAssignment occurrences="4">
      <code>$filterChain</code>
      <code>$input</code>
      <code>$inputFilter</code>
      <code>$validatorChain</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="9">
      <code>get</code>
      <code>getFilterChain</code>
      <code>getInputFilterManager</code>
      <code>getPluginManager</code>
      <code>getPluginManager</code>
      <code>getValidatorChain</code>
      <code>has</code>
      <code>plugin</code>
      <code>plugin</code>
    </MixedMethodCall>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getFactory</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/InputFilterAwareTraitTest.php">
    <InvalidScalarArgument occurrences="2">
      <code>InputFilterAwareTrait::class</code>
      <code>InputFilterAwareTrait::class</code>
    </InvalidScalarArgument>
    <MixedMethodCall occurrences="4">
      <code>getInputFilter</code>
      <code>getInputFilter</code>
      <code>setInputFilter</code>
      <code>setInputFilter</code>
    </MixedMethodCall>
  </file>
  <file src="test/InputFilterPluginManagerCompatibilityTest.php">
    <InvalidReturnType occurrences="1">
      <code>getInstanceOf</code>
    </InvalidReturnType>
  </file>
  <file src="test/InputFilterPluginManagerFactoryTest.php">
    <LessSpecificReturnStatement occurrences="1"/>
    <MissingClosureReturnType occurrences="1">
      <code>function () use ($inputFilter) {</code>
    </MissingClosureReturnType>
    <MoreSpecificReturnType occurrences="1">
      <code>array&lt;string, array{0: class-string&lt;InputInterface&gt;}&gt;</code>
    </MoreSpecificReturnType>
  </file>
  <file src="test/InputFilterPluginManagerTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$this-&gt;getServiceNotFoundException()</code>
      <code>$this-&gt;getServiceNotFoundException()</code>
    </ArgumentTypeCoercion>
    <LessSpecificReturnStatement occurrences="1"/>
    <MoreSpecificReturnType occurrences="1"/>
    <PossiblyNullReference occurrences="2">
      <code>getPluginManager</code>
      <code>getPluginManager</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>method_exists($this-&gt;manager, 'configure')</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/InputFilterTest.php">
    <ImplementedReturnTypeMismatch occurrences="1"/>
    <LessSpecificReturnStatement occurrences="1">
      <code>$dataSets</code>
    </LessSpecificReturnStatement>
    <MixedArrayAccess occurrences="2">
      <code>$filter1-&gt;getValues()['nested']['nestedField1']</code>
      <code>$filter1-&gt;getValues()['nested']['nestedField1']</code>
    </MixedArrayAccess>
    <MoreSpecificReturnType occurrences="1"/>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$inputFilter</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyInvalidArgument occurrences="1">
      <code>$factory</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/InputTest.php">
    <InvalidReturnStatement occurrences="1"/>
    <InvalidReturnType occurrences="1"/>
    <LessSpecificReturnStatement occurrences="1">
      <code>array_merge($emptyValues, $mixedValues)</code>
    </LessSpecificReturnStatement>
    <MissingClosureParamType occurrences="6">
      <code>$context</code>
      <code>$context</code>
      <code>$context</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArrayAccess occurrences="2">
      <code>$value['filtered']</code>
      <code>$value['raw']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$tmpTemplate[4]</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>method</code>
      <code>willReturn</code>
      <code>with</code>
    </MixedMethodCall>
    <MoreSpecificReturnType occurrences="1"/>
    <PossiblyInvalidArgument occurrences="1">
      <code>$translator</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="1">
      <code>expects</code>
    </PossiblyUndefinedMethod>
    <RedundantCondition occurrences="1">
      <code>isArray</code>
    </RedundantCondition>
  </file>
  <file src="test/ModuleTest.php">
    <InvalidArgument occurrences="1">
      <code>$moduleManager-&gt;reveal()</code>
    </InvalidArgument>
    <MixedArgument occurrences="3">
      <code>$config['input_filters']['abstract_factories']</code>
      <code>$config['service_manager']['aliases']</code>
      <code>$config['service_manager']['factories']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="3">
      <code>$config['input_filters']['abstract_factories']</code>
      <code>$config['service_manager']['aliases']</code>
      <code>$config['service_manager']['factories']</code>
    </MixedArrayAccess>
  </file>
  <file src="test/TestAsset/CustomInput.php">
    <DeprecatedInterface occurrences="1">
      <code>CustomInput</code>
    </DeprecatedInterface>
  </file>
  <file src="test/TestAsset/FooAbstractFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>FooAbstractFactory</code>
    </DeprecatedInterface>
    <InvalidNullableReturnType occurrences="1">
      <code>canCreate</code>
    </InvalidNullableReturnType>
    <ParamNameMismatch occurrences="3">
      <code>$container</code>
      <code>$container</code>
      <code>$name</code>
    </ParamNameMismatch>
  </file>
</files>
